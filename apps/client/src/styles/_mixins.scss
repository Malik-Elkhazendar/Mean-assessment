// Professional SCSS Mixins for MEAN Assessment Application

// Card mixin with professional styling
@mixin card($elevation: 2, $radius: var(--radius)) {
  background-color: var(--surface-color);
  border-radius: $radius;
  box-shadow: var(--elevation-#{$elevation});
  border: 1px solid var(--border-color);
  transition: all var(--transition-normal);
  
  &:hover {
    background-color: var(--surface-hover);
    box-shadow: var(--elevation-#{$elevation + 2});
  }
}

// Button mixin with soft styling
@mixin button-soft($color: primary) {
  padding: var(--space-3) var(--space-6);
  border-radius: var(--radius);
  font-weight: var(--font-medium);
  font-size: var(--text-sm);
  letter-spacing: 0.025em;
  transition: all var(--transition-normal);
  cursor: pointer;
  border: none;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-2);
  
  @if $color == primary {
    background-color: var(--primary-color);
    color: var(--text-on-primary);
    
    &:hover:not(:disabled) {
      background-color: var(--primary-600);
      box-shadow: var(--elevation-2);
    }
    
    &:active:not(:disabled) {
      background-color: var(--primary-700);
      transform: translateY(1px);
    }
  } @else if $color == secondary {
    background-color: var(--surface-color);
    color: var(--text-primary);
    border: 1px solid var(--border-color);
    
    &:hover:not(:disabled) {
      background-color: var(--surface-hover);
      border-color: var(--primary-300);
    }
  } @else if $color == success {
    background-color: var(--success-color);
    color: white;
    
    &:hover:not(:disabled) {
      background-color: var(--success-dark);
    }
  }
  
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: none;
  }
  
  &:focus-visible {
    outline: 2px solid var(--focus-color);
    outline-offset: 2px;
  }
}

// Input field mixin with professional styling
@mixin input-field {
  padding: var(--space-3) var(--space-4);
  border: 1px solid var(--border-color);
  border-radius: var(--radius);
  background-color: var(--surface-color);
  color: var(--text-primary);
  font-size: var(--text-base);
  line-height: var(--leading-normal);
  transition: all var(--transition-normal);
  width: 100%;
  
  &::placeholder {
    color: var(--text-tertiary);
  }
  
  &:focus {
    outline: none;
    border-color: var(--focus-color);
    box-shadow: var(--shadow-focus);
  }
  
  &:hover:not(:focus) {
    border-color: var(--gray-300);
  }
  
  &:disabled {
    background-color: var(--surface-disabled);
    color: var(--text-disabled);
    cursor: not-allowed;
  }
  
  &.error {
    border-color: var(--error-color);
    
    &:focus {
      box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);
    }
  }
}

// Loading state mixin
@mixin loading-skeleton {
  background: linear-gradient(
    90deg,
    var(--gray-200) 25%,
    var(--gray-100) 50%,
    var(--gray-200) 75%
  );
  background-size: 200% 100%;
  animation: loading 1.5s infinite;
}

@keyframes loading {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}

// Responsive breakpoint mixins
@mixin mobile {
  @media (max-width: 480px) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: 481px) and (max-width: 768px) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: 769px) {
    @content;
  }
}

@mixin large {
  @media (min-width: 1025px) {
    @content;
  }
}

// Focus visible mixin for accessibility
@mixin focus-visible {
  &:focus-visible {
    outline: 2px solid var(--focus-color);
    outline-offset: 2px;
    border-radius: var(--radius-sm);
  }
}

// Text truncation mixin
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Multi-line text truncation
@mixin text-truncate-lines($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Visually hidden but accessible to screen readers
@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// Glass morphism effect
@mixin glass {
  background: rgba(255, 255, 255, 0.15);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

// Professional gradient
@mixin gradient-primary {
  background: linear-gradient(135deg, var(--primary-500) 0%, var(--primary-600) 100%);
}

@mixin gradient-surface {
  background: linear-gradient(135deg, var(--surface-color) 0%, var(--gray-50) 100%);
}