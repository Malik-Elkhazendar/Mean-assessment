# Environment Configuration Template
# Copy this file to .env or use specific environment files:
# - .env.development (for local development)
# - .env.staging (for staging/testing)  
# - .env.production (for production deployment)

# ===== APPLICATION SETTINGS =====
NODE_ENV=development|staging|production
PORT=3000

# ===== DATABASE CONFIGURATION =====
# MongoDB Atlas (replace database name for each environment)
MONGODB_URI=mongodb+srv://malekh387:Malekhamed22@server.hobvbe9.mongodb.net/DATABASE_NAME?retryWrites=true&w=majority&appName=Server
# Where DATABASE_NAME is:
# - mean-assessment-dev (for development)
# - mean-assessment-staging (for staging)  
# - mean-assessment-prod (for production)

# ===== AUTHENTICATION =====
# JWT Secret (MUST be different for each environment)
# Development environment
JWT_SECRET=dev-mean-assessment-jwt-secret-2024-secure-key-1a2b3c4d5e6f
# Staging environment - use: staging-mean-assessment-jwt-secret-2024-secure-key-9g8h7i6j5k4l
# Production environment - use: prod-mean-assessment-jwt-secret-2024-ultra-secure-key-3m4n5o6p7q8r
JWT_EXPIRES_IN=8h

# Access token lifetime (short-lived JWT for API access)
# Overrides JWT_EXPIRES_IN for access token signing if set
JWT_ACCESS_EXPIRES_IN=15m

# Absolute session window (backend-enforced) and refresh rotation interval
# Session cannot exceed this duration from initial login
SESSION_TTL_MS=28800000         # 8 hours
REFRESH_TOKEN_TTL_MS=28500000   # ~7h 55m (keeps session alive until the 8h cap)

# ===== EMAIL CONFIGURATION =====
# For Development/Staging (Mailtrap)
SMTP_HOST=sandbox.smtp.mailtrap.io
SMTP_PORT=2525
SMTP_SECURE=false
SMTP_USER=7dcc40a0d64cfa
SMTP_PASS=4f3a1a175c390b
MAIL_FROM="MEAN Assessment" <noreply@mean-assessment.local>


# ===== ENVIRONMENT SPECIFIC SETTINGS =====
DEBUG=true|false
ENABLE_SWAGGER=true|false
ENABLE_CORS=true|false
LOG_LEVEL=debug|info|warn|error

# ===== SECURITY (CORS / Cookies) =====
# Comma-separated list of allowed origins
# Example: http://localhost:4200,https://staging.example.com
CORS_ORIGINS=http://localhost:4200
# Allow credentials (required for HttpOnly refresh cookie)
CORS_CREDENTIALS=true

# Refresh cookie settings
# Adjust per environment (Secure=true for HTTPS only)
COOKIE_DOMAIN=localhost
COOKIE_SECURE=false
COOKIE_SAMESITE=Lax

# (Production) Override with your production domain and secure cookies
# If frontend and backend are on different sites, you must use cross-site cookies:
# - Use HTTPS everywhere
# - Set SameSite=None and Secure=true
# Example:
# CORS_ORIGINS=https://app.example.com
# COOKIE_DOMAIN=api.example.com
# COOKIE_SECURE=true
# COOKIE_SAMESITE=None
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100
